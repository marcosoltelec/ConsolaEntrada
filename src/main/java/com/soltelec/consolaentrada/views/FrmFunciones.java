/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.soltelec.consolaentrada.views;

import com.soltelec.consolaentrada.models.controllers.HojaPruebasJpaController;
import com.soltelec.consolaentrada.models.controllers.PruebaJpaController;
import com.soltelec.consolaentrada.models.entities.HojaPruebas;
import java.awt.AWTException;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

import java.awt.Component;
import java.awt.Robot;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author Gerencia TIC
 */
public class FrmFunciones extends javax.swing.JDialog {

    java.awt.Frame frame;
    private Timer timer = null;
    public static String parametro;
    public static String edoSicov = "";
    public static Boolean desistir = false;
    private HojaPruebas hojaPruebasActual;
    PruebaJpaController pruebasJPA;
    HojaPruebasJpaController hojaPruebasJPA;
    String nombre;
    String proveedor;

    //DIRECCIÓN IP DEL SERVIDOR = 186.112.176.34
    //---
    FrmFunciones(Window owner, ModalityType modalityType, HojaPruebas hojaPruebasActual, String nombre, String proveedor) {
        super(owner, modalityType);
        initComponents();
        Dimension d = new java.awt.Dimension(445, 100);
        setSize(d);
        setTitle(" PANEL FUNCIONES ADICIONALES");
        this.requestFocusInWindow();
        this.hojaPruebasActual = hojaPruebasActual;
        pruebasJPA = new PruebaJpaController();
        hojaPruebasJPA = new HojaPruebasJpaController();
        this.nombre = nombre;
        this.proveedor = proveedor;
        setResizable(false);
    }

    ////////////////////////////////////////////PARA NO PERDER LA REFERENCIA DEL OBJETO/////////
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblAdventencias = new javax.swing.JLabel();
        selectSicov = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setType(java.awt.Window.Type.POPUP);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton1.setText("Aplicar");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("FUNCIONES:");

        lblAdventencias.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        lblAdventencias.setForeground(new java.awt.Color(204, 0, 0));
        lblAdventencias.setToolTipText("");

        selectSicov.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Corregir  Placa", "Cambio Tipo Revision", "Cambio PIN" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblAdventencias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(152, 152, 152))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectSicov, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 70, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectSicov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAdventencias, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setBounds(0, 0, 512, 107);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        edoSicov = (String) selectSicov.getSelectedItem();
        if (edoSicov.equalsIgnoreCase("Corregir  Placa")) {
            FrmPlaca frmP = new FrmPlaca(null, JDialog.ModalityType.MODELESS, hojaPruebasActual, nombre);
            frmP.setModal(true);
            frmP.setLocationRelativeTo(null);
            frmP.setVisible(true);
        }
        if (edoSicov.equalsIgnoreCase("Cambio Tipo Revision")) {
            if (hojaPruebasActual.getPreventiva().equalsIgnoreCase("N")) {
                if (hojaPruebasActual.getEstadoSICOV().equalsIgnoreCase("SINCRONIZADO") || hojaPruebasActual.getEstadoSICOV().equalsIgnoreCase("'Env1FUR")) {
                    this.dispose();
                    JOptionPane.showMessageDialog(null, "Disculpe; YA NO PUEDE cambiar esta revision porque fue reportada al SICOV  ..!");
                    return;
                }
                
            }else{
               if (proveedor.equalsIgnoreCase("CI2")) {
                    this.dispose();
                    Boolean nunValido = false;
                    String strPIN = null;
                    while (nunValido == false) {
                        strPIN = JOptionPane.showInputDialog(null,"Ingese Nro de PIN ");
                        if (strPIN.length() > 22) {
                            try {
                                int opcion = JOptionPane.showOptionDialog(null, "Este Nro de PIN, " + strPIN + " ¿Es Correcto? ", "Confirmacion PIN",
                                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                                if (opcion == JOptionPane.OK_OPTION) { 
                                    nunValido = true;
                                }
                            } catch (NumberFormatException ne) {
                                JOptionPane.showMessageDialog(null, "Disculpe el PIN Ingresado no es Numerico");
                            }
                        } else {
                            JOptionPane.showOptionDialog(null, "Disculpe el Nro. PIN no cumple con las espcificaciones minima,\n Por favor Asegurese que este bien escrito y vuelva a intentarlo",
                                    "Registo PIN", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                        }
                    } // fin de ciclo de validacion
                    hojaPruebasActual.setPin(strPIN);
                }
            }
            hojaPruebasJPA.cambiarRTMPreventiva(hojaPruebasActual, nombre,"CambioModalidad");
        }
         if (edoSicov.equalsIgnoreCase("Cambio PIN")) {
             if (proveedor.equalsIgnoreCase("CI2")) {
                    this.dispose();
                    Boolean nunValido = false;
                    String strPIN = null;
                    while (nunValido == false) {
                        strPIN = JOptionPane.showInputDialog(null,"Ingese Nro de PIN ",hojaPruebasActual.getPin());
                        if (strPIN.length() > 22) {
                            try {
                                int opcion = JOptionPane.showOptionDialog(null, "Este Nro de PIN, " + strPIN + " ¿Es Correcto? ", "Confirmacion PIN",
                                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                                if (opcion == JOptionPane.OK_OPTION) {
                                    nunValido = true;
                                }
                            } catch (NumberFormatException ne) {
                                JOptionPane.showMessageDialog(null, "Disculpe el PIN Ingresado no es Numerico");
                            }
                        } else {
                            JOptionPane.showOptionDialog(null, "Disculpe el Nro. PIN no cumple con las espcificaciones minima,\n Por favor Asegurese que este bien escrito y vuelva a intentarlo",
                                    "Registo PIN", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                        }
                    } // fin de ciclo de validacion
                    hojaPruebasActual.setPin(strPIN);
                    hojaPruebasJPA.cambiarRTMPreventiva(hojaPruebasActual, nombre,"CambioPin");
                }else{
                  JOptionPane.showMessageDialog(null, "Disculpe; esta opcion SOLO APLICA si su Proveedor es CI2");
             }
         }        
        this.dispose();
        JOptionPane.showMessageDialog(null, "He aplicado la funcion " + edoSicov + " de una menera Exitosa ..!");

    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.desistir = true;// TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        this.desistir = true;
        dispose();
    }

    /////////////////////////////////MÉTODOS SOBRE LA FUNCIONALIDAD //////////////////////////////
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmFunciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    Robot ro = new Robot();
                    ro.keyPress(KeyEvent.VK_TAB);
                } catch (AWTException ex) {
                    Logger.getLogger(FrmFunciones.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblAdventencias;
    private javax.swing.JComboBox selectSicov;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = 0;
}
